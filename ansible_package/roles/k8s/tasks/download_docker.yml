############################################################################
# Copyright 2021 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################

---

- name: Download Docker X86 Offline Package
  get_url:
    url: https://download.docker.com/linux/static/stable/x86_64/docker-18.09.0.tgz
    dest: "{{ K8S_OFFLINE_DIR }}/docker/docker.tgz"
  when: ARCH == "amd64"

- name: Download Docker ARM64 Offline Package
  get_url:
    url: https://download.docker.com/linux/static/stable/aarch64/docker-18.09.0.tgz
    dest: "{{ K8S_OFFLINE_DIR }}/docker/docker.tgz"
  when: ARCH == "arm64"

- name: Copy Docker Service File to Offline Package
  copy:
    src: docker.service
    dest: "{{ K8S_OFFLINE_DIR }}/docker"

- name: Check Whether Docker Installed
  shell: docker version
  register: dockerInstalled
  ignore_errors: yes
  
- debug:
    msg: "Docker is not installed yet, will be installed"
  when: dockerInstalled is failed

- name: Create Docker Directory to Unarchive Docker Tarball File
  file:
    path: /tmp/remote-platform/k8s
    state: directory
  when: dockerInstalled is failed

- name: Unarchive Docker Tarball File
  unarchive:
    src: "{{ K8S_OFFLINE_DIR }}/docker/docker.tgz"
    dest: /tmp/remote-platform/k8s
    copy: yes
  when: dockerInstalled is failed

- name: Copy Docker Related Files to /usr/bin
  copy:
    src: "/tmp/remote-platform/k8s/docker/{{ item }}"
    dest: /usr/bin
    mode: '0755'
  loop:
    - containerd
    - containerd-shim
    - ctr
    - docker
    - dockerd
    - docker-init
    - docker-proxy
    - runc
  when: dockerInstalled is failed

- name: Copy Docker Service File to /etc/systemd/system/
  copy:
    src: "{{ K8S_OFFLINE_DIR }}/docker/docker.service"
    dest: /etc/systemd/system/
  when: dockerInstalled is failed

- name: Remove /tmp/remote-platform/k8s
  file:
    path: /tmp/remote-platform/k8s
    state: absent

- name: Reload Docker System Deamon
  shell: systemctl daemon-reload
  when: dockerInstalled is failed

- name: Start Docker System Service
  service:
    name: docker.service
    state: restarted
  when: dockerInstalled is failed

- name: Check Whether Docker Installed Successfully
  shell: docker version
  when: dockerInstalled is failed

- name: Create Docker Registry Directory
  file:
    path: "{{ DOCKER_REGISTRY }}"
    state: directory

- name: Pull Retag and Save Docker Registry Image
  shell: |
    docker pull {{ DOCKER_REGISTRY_IMAGE }}
    new_image_name=`echo {{ DOCKER_REGISTRY_IMAGE }} | sed -e "s/swr.cn-north-4.myhuaweicloud.com\///g"`
    docker image tag {{ DOCKER_REGISTRY_IMAGE }} $new_image_name
    docker save $new_image_name | gzip > {{ DOCKER_REGISTRY }}/registry-2.tar.gz
