---

- name: Set Registry URL for Multi Node
  set_fact:
    REGISTRY_URL: "{{ groups.master[0] }}:5000/"
  when: NODE_MODE == "muno"

- name: Set Registry URL for AIO
  set_fact:
    REGISTRY_URL: ""
  when: NODE_MODE == "aio"

- name: Check EG_MODE for DEVELOPER
  fail:
    msg: "Could not {{ OPERATION }} DEVELOPER with EG_MODE: {{ EG_MODE }}"
  when: EG_MODE != "all" and EG_MODE != "controller"

- name: Set Portal IP
  set_fact:
    PORTAL_IP: "{{ ansible_default_ipv4['address'] }}"
  when: PORTAL_IP is undefined

- name: Check whether DEVELOPER is Deployed
  shell: "helm list | grep {{ DEVELOPER_HELM_RELEASE_NAME }}"
  register: developerDeployed 
  ignore_errors: yes

- debug:
    msg: DEVELOPER is already deployed, no need to be deployed again
  when: developerDeployed is succeeded and OPERATION == "install"

- debug:
    msg: DEVELOPER is not deployed, will be deployed
  when: developerDeployed is failed and OPERATION == "install"

- debug:
    msg: DEVELOPER is already deployed, will be undeployed
  when: developerDeployed is succeeded and OPERATION == "uninstall"

- debug:
    msg: DEVELOPER is not deployed, no need to be undeployed anymore
  when: developerDeployed is failed and OPERATION == "uninstall"

- name: Deploy DEVELOPER Online
  include: "deploy_online.yml"
  when: developerDeployed is failed and OPERATION == "install" and NETWORK_MODE == "online"

- name: Deploy DEVELOPER Offline
  include: "deploy_offline.yml"
  when: developerDeployed is failed and OPERATION == "install" and NETWORK_MODE == "offline"

- name: Undeploy DEVELOPER
  include: "undeploy.yml"
  when: developerDeployed is succeeded and OPERATION == "uninstall"
