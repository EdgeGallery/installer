#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Deploy DEVELOPER
  shell: |
    helm install --wait {{ DEVELOPER_HELM_RELEASE_NAME }} {{ HELM_CHARTS_PATH }}/edgegallery/developer-{{ HELM_TAG }}.tgz \
    --set global.oauth2.authServerAddress=https://{{ PORTAL_IP }}:{{ USER_MGMT_PORT }} \
    --set global.oauth2.clients.developer.clientSecret={{ developerOauth2ClientSecret }} \
    --set images.developerFe.repository={{ developer_images_developerFe_repository }} \
    --set images.developerBe.repository={{ developer_images_developerBe_repository }} \
    --set images.postgres.repository={{ developer_images_postgres_repository }} \
    --set images.initservicecenter.repository={{ developer_images_initservicecenter_repository }} \
    --set images.toolChain.repository={{ developer_images_toolChain_repository }} \
    --set images.portingAdvisor.repository={{ developer_images_portingAdvisor_repository }} \
    --set images.developerFe.tag={{ developer_images_developerFe_tag }} \
    --set images.developerBe.tag={{ developer_images_developerBe_tag }} \
    --set images.toolChain.tag={{ developer_images_toolChain_tag }} \
    --set images.postgres.tag={{ developer_images_postgres_tag }} \
    --set images.initservicecenter.tag={{ developer_images_initservicecenter_tag }} \
    --set images.portingAdvisor.tag={{ developer_images_portingAdvisor_tag }} \
    --set images.developerFe.pullPolicy={{ developer_images_developerFe_pullPolicy }} \
    --set images.developerBe.pullPolicy={{ developer_images_developerBe_pullPolicy }} \
    --set images.postgres.pullPolicy={{ developer_images_postgres_pullPolicy }} \
    --set images.initservicecenter.pullPolicy={{ developer_images_initservicecenter_pullPolicy }} \
    --set images.toolChain.pullPolicy={{ developer_images_toolChain_pullPolicy }} \
    --set images.portingAdvisor.pullPolicy={{ developer_images_portingAdvisor_pullPolicy }} \
    --set global.ssl.enabled={{ developer_global_ssl_enabled }} \
    --set global.ssl.secretName={{ developer_global_ssl_secretName }} \
    --set global.persistence.enabled={{ ENABLE_PERSISTENCE }} \
    --set developer.dockerRepo.endpoint={{ PORTAL_IP }} \
    --set developer.dockerRepo.password={{ HARBOR_ADMIN_PASSWORD }} \
    --set developer.dockerRepo.username=admin \
    --set postgres.password={{ developerPostgresPassword }} \
    --set developer.vmImage.password={{ developerVMImagePassword }}
  no_log: true
  ignore_errors: yes
  register: developer_out

- name: Output of "Deploy DEVELOPER" task
  debug:
    msg: "rc: {{developer_out.rc}}, stderr: {{developer_out.stderr}}, stderr_lines: {{developer_out.stderr_lines}}, stdout: {{developer_out.stdout}}, stdout_lines: {{developer_out.stdout_lines}}"
  when: developer_out is failed

- name: Failing as task "Deploy DEVELOPER" failed
  fail:
    msg: The task Deploy DEVELOPER has failed
  when: developer_out is failed

- name: Check DEVELOPER Status
  uri:
    url: "https://{{ PORTAL_IP }}:30092/health"
    validate_certs: no
