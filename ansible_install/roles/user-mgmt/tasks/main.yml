#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Check MASTER_IP Param
  fail:
    msg: "Param MASTER_IP in var.yml is not defined"
  when: MASTER_IP is undefined or MASTER_IP is none

- name: Set Registry URL for Multi Node
  set_fact:
    REGISTRY_URL: "{{ MASTER_IP }}:5000/"
  when: NODE_MODE == "muno"

- name: Set Registry URL for AIO
  set_fact:
    REGISTRY_URL: ""
  when: NODE_MODE == "aio"

- name: Check EG_MODE for USER_MGMT
  fail:
    msg: "Could not {{ OPERATION }} USER_MGMT with EG_MODE: {{ EG_MODE }}"
  when: EG_MODE != "all" and EG_MODE != "controller"

- name: Set Portal IP
  set_fact:
    PORTAL_IP: "{{ MASTER_IP }}"
  when: PORTAL_IP is undefined

- name: Set PROTOCOL Value to be https
  set_fact:
    PROTOCOL: https
  when: ENABLE_SSL == ture

- name: Set PROTOCOL Value to be http
  set_fact:
    PROTOCOL: http
  when: ENABLE_SSL == false   

- name: Set Mail Related Params
  set_fact:
    usermgmt_mail_host: ""
    usermgmt_mail_port: ""
    usermgmt_mail_sender: ""
    usermgmt_mail_authcode: ""
  when: usermgmt_mail_enabled == false

- name: Set External IAM Related Params
  set_fact:
    EXTERNAL_IAM_ENDPOINT: ""
  when: ENABLE_EXTERNAL_IAM == false

- name: Set APPSTORE_ACCESS_URL as PORTAL_IP
  set_fact:
    APPSTORE_ACCESS_URL: "{{ PROTOCOL }}://{{ PORTAL_IP }}:{{ APPSTORE_PORT }}"
  when: APPSTORE_CLIENT_ACCESS_URL is undefined or APPSTORE_CLIENT_ACCESS_URL is none

- name: Set APPSTORE_ACCESS_URL as APPSTORE_CLIENT_ACCESS_URL
  set_fact:
    APPSTORE_ACCESS_URL: "{{ APPSTORE_CLIENT_ACCESS_URL }}"
  when: APPSTORE_CLIENT_ACCESS_URL is defined and APPSTORE_CLIENT_ACCESS_URL is not none

- name: Set DEVELOPER_ACCESS_URL as PORTAL_IP
  set_fact:
    DEVELOPER_ACCESS_URL: "{{ PROTOCOL }}://{{ PORTAL_IP }}:{{ DEVELOPER_PORT }}"
  when: DEVELOPER_CLIENT_ACCESS_URL is undefined or DEVELOPER_CLIENT_ACCESS_URL is none

- name: Set DEVELOPER_ACCESS_URL as DEVELOPER_CLIENT_ACCESS_URL
  set_fact:
    DEVELOPER_ACCESS_URL: "{{ DEVELOPER_CLIENT_ACCESS_URL }}"
  when: DEVELOPER_CLIENT_ACCESS_URL is defined and DEVELOPER_CLIENT_ACCESS_URL is not none

- name: Set MECM_ACCESS_URL as PORTAL_IP
  set_fact:
    MECM_ACCESS_URL: "{{ PROTOCOL }}://{{ PORTAL_IP }}:{{ MECM_PORT }}"
  when: MECM_CLIENT_ACCESS_URL is undefined or MECM_CLIENT_ACCESS_URL is none

- name: Set MECM_ACCESS_URL as MECM_CLIENT_ACCESS_URL
  set_fact:
    MECM_ACCESS_URL: "{{ MECM_CLIENT_ACCESS_URL }}"
  when: MECM_CLIENT_ACCESS_URL is defined and MECM_CLIENT_ACCESS_URL is not none

- name: Set ATP_ACCESS_URL as PORTAL_IP
  set_fact:
    ATP_ACCESS_URL: "{{ PROTOCOL }}://{{ PORTAL_IP }}:{{ ATP_PORT }}"
  when: ATP_CLIENT_ACCESS_URL is undefined or ATP_CLIENT_ACCESS_URL is none

- name: Set ATP_ACCESS_URL as ATP_CLIENT_ACCESS_URL
  set_fact:
    ATP_ACCESS_URL: "{{ ATP_CLIENT_ACCESS_URL }}"
  when: ATP_CLIENT_ACCESS_URL is defined and ATP_CLIENT_ACCESS_URL is not none

- name: Set EDGEGALLERY_ACCESS_URL as PORTAL_IP
  set_fact:
    EDGEGALLERY_ACCESS_URL: "{{ PROTOCOL }}://{{ PORTAL_IP }}:{{ EDGEGALLERY_PORT }}"
  when: EDGEGALLERY_CLIENT_ACCESS_URL is undefined or EDGEGALLERY_CLIENT_ACCESS_URL is none

- name: Set EDGEGALLERY_ACCESS_URL as EDGEGALLERY_CLIENT_ACCESS_URL
  set_fact:
    EDGEGALLERY_ACCESS_URL: "{{ EDGEGALLERY_CLIENT_ACCESS_URL }}"
  when: EDGEGALLERY_CLIENT_ACCESS_URL is defined and EDGEGALLERY_CLIENT_ACCESS_URL is not none

- name: Check whether USER_MGMT is Deployed
  shell: helm list -A | grep user-mgmt-edgegallery 
  register: userMgmtDeployed
  ignore_errors: yes

- debug:
    msg: USER_MGMT is already deployed, no need to be deployed again
  when: userMgmtDeployed is succeeded and OPERATION == "install"

- debug:
    msg: USER_MGMT is not deployed, will be deployed
  when: userMgmtDeployed is failed and OPERATION == "install"

- debug:
    msg: USER_MGMT is already deployed or not deployed successfully, will be undeployed
  when: OPERATION == "uninstall"

- name: Deploy USER_MGMT Online
  include: "deploy_online.yml"
  when: userMgmtDeployed is failed and OPERATION == "install" and NETWORK_MODE == "online"

- name: Deploy USER_MGMT Offline
  include: "deploy_offline.yml"
  when: userMgmtDeployed is failed and OPERATION == "install" and NETWORK_MODE == "offline"

- name: Undeploy USER_MGMT
  include: "undeploy.yml"
  when: OPERATION == "uninstall"
