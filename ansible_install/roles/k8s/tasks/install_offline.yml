---

- name: Create the Directory for k8s Offline Tarball File
  file:
    path: "{{ K8S_OFFLINE_DIR }}"
    state: directory

- name: Unarchive k8s Offline Tarball File
  unarchive:
    src: "{{ K8S_TARBALL_FILE }}"
    dest: "{{ K8S_OFFLINE_DIR }}"
    copy: no

- name: Check whether Docker is installed
  command: docker version
  register: dockerInstalled
  ignore_errors: yes

- debug:
    msg: Docker is already installed, no need to be installed again
  when: dockerInstalled is succeeded

- debug:
    msg: Docker is not installed, will be installed
  when: dockerInstalled is failed

- name: Install Docker Offline
  import_tasks: docker_install_offline.yml
  when: dockerInstalled is failed

- name: Create Directory /etc/docker For Docker Registry
  file:
    path: /etc/docker
    state: directory

- name: Install and Setup Docker Registry
  import_tasks: docker_registry_install_offline.yml
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "master"

- name: Setup Docker Daemon For AIO
  import_tasks: docker_daemon_set_aio.yml
  when: NODE_MODE == "aio" and K8S_NODE_TYPE == "master" and ARCH == "amd64"

- name: Set Docker daemon.json on Worker Node
  copy:
    src: "/home/{{ groups.master[0] }}/etc/docker/daemon.json"
    dest: /etc/docker/
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "worker"

- name: Restart Docker Service
  service:
    name: docker.service
    state: restarted

- name: Install K8S
  import_tasks: k8s_install_offline.yml

- name: Create CNI Bin Directory
  file:
    path: "{{ CNI_BIN_PATH }}"
    state: directory

- name: Copy CNI to CNI Bin Directory
  copy:
    src: "{{ K8S_OFFLINE_DIR }}/cni/{{ item }}"
    dest: "{{ CNI_BIN_PATH }}"
    mode: '0755'
    remote_src: yes
  loop:
    - macvlan
    - host-local

