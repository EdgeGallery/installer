- name: Set multus AMD64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/network-isolation/multus.yaml"
    regexp: "image: docker.io/nfvpe/multus:stable"
    replace: "image: {{mep_images_multus_repository}}:{{mep_images_multus_tag}}"

- name: Set multus ARM64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/network-isolation/multus.yaml"
    regexp: "image: docker.io/nfvpe/multus:stable-arm64v8"
    replace: "image: {{mep_images_multus_repository}}:{{mep_images_multus_tag}}"

- name: Create Network Isolation Multus Resources
  shell: "kubectl apply -f {{ TARBALL_PATH }}/conf/edge/network-isolation/{{ item }}"
  loop:
    - multus.yaml
    - eg-sp-rbac.yaml
    - eg-sp-controller.yaml

- name: Network Setting
  shell: |
    ip link add eg-mp1 link {{ EG_NODE_EDGE_MP1}} type macvlan mode bridge
    ip addr add 200.1.1.2/24 dev eg-mp1
    ip link set dev eg-mp1 up
    ip link add eg-mm5 link {{EG_NODE_EDGE_MM5}} type macvlan mode bridge
    ip addr add 100.1.1.2/24 dev eg-mm5
    ip link set dev eg-mm5 up

- name: Wait for kube-multus Pod is Ready
  shell: |
    nodes_num=`kubectl get nodes | wc -l`
    ((nodes_num=nodes_num-1))
    multus_num=`kubectl get pods -A | grep "kube-multus" | grep "Running" | wc -l`
    if [ $nodes_num == $multus_num ]; then echo "true"; else echo "false"; fi
  register: multusPodNum
  until: multusPodNum.stdout == "true"
  retries: 30
  delay: 5
