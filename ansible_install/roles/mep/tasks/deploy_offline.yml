#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Get EG_NODE_EDGE_MP1
  shell: ip a | grep -B2 {{ ansible_default_ipv4['address'] }} | head -n1 | cut -d ":" -f2 |cut -d " " -f2
  register: mp1

- name: Get EG_NODE_EDGE_MM5
  shell: ip a | grep -B2 {{ ansible_default_ipv4['address'] }} | head -n1 | cut -d ":" -f2 |cut -d " " -f2
  register: mm5

- name: Set EG_NODE_EDGE_MP1
  set_fact:
    EG_NODE_EDGE_MP1: "{{ mp1.stdout }}"
  when: EG_NODE_EDGE_MP1 is undefined

- name: Set EG_NODE_EDGE_MM5
  set_fact:
    EG_NODE_EDGE_MM5: "{{ mm5.stdout }}"
  when: EG_NODE_EDGE_MM5 is undefined

- name: Prepare MEP SSL
  include: "prepare_mep_ssl.yml"

- name: Deploy DNS Metallb
  include: "deploy_dns_metallb.yml"

- name: Setting up Network Isolation
  include: "deploy_network_isolation_multus.yml"

- name: Set ipam_type For AIO Mode
  set_fact:
    ipam_type: "host-local"
  when: ipam_type is undefined and NODE_MODE == "aio"

- name: Set ipam_type For Multi Node Mode
  set_fact:
    ipam_type: "whereabouts"
  when: ipam_type is undefined and NODE_MODE == "muno"

- name: Set EG_NODE_EDGE_MP1 For Multi Node Mode
  set_fact:
    EG_NODE_EDGE_MP1: "vxlan-mp1"
  when: NODE_MODE == "muno"

- name: Set EG_NODE_EDGE_MM5 For Multi Node Mode
  set_fact:
    EG_NODE_EDGE_MM5: "vxlan-mm5"
  when: NODE_MODE == "muno"

- name: Deploy MEP
  shell: |
    helm install --wait mep-edgegallery {{ HELM_CHARTS_PATH }}/edgegallery/mep-{{ HELM_TAG }}.tgz \
    --set networkIsolation.ipamType={{ ipam_type }} \
    --set networkIsolation.phyInterface.mp1={{ EG_NODE_EDGE_MP1 }} \
    --set networkIsolation.phyInterface.mm5={{ EG_NODE_EDGE_MM5 }} \
    --set images.mep.repository={{ mep_images_mep_repository }} \
    --set images.mepauth.repository={{ mep_images_mepauth_repository }} \
    --set images.dns.repository={{ mep_images_dns_repository }} \
    --set images.kong.repository={{ mep_images_kong_repository }} \
    --set images.postgres.repository={{ mep_images_postgres_repository }} \
    --set images.elasticsearch.repository={{ mep_images_elasticsearch_repository }} \
    --set images.ntp.repository={{ mep_images_ntp_repository }} \
    --set images.mep.tag={{ EG_IMAGE_TAG }} \
    --set images.mepauth.tag={{ EG_IMAGE_TAG }} \
    --set images.dns.tag={{ EG_IMAGE_TAG }} \
    --set images.kong.tag={{mep_images_kong_tag}} \
    --set images.postgres.tag={{mep_images_postgres_tag}} \
    --set images.elasticsearch.tag={{mep_images_elasticsearch_tag}} \
    --set images.ntp.tag={{mep_images_ntp_tag}} \
    --set images.mep.pullPolicy={{ mep_images_mep_pullPolicy }} \
    --set images.mepauth.pullPolicy={{ mep_images_mepauth_pullPolicy }} \
    --set images.dns.pullPolicy={{ mep_images_dns_pullPolicy }} \
    --set images.kong.pullPolicy={{ mep_images_kong_pullPolicy }} \
    --set images.postgres.pullPolicy={{ mep_images_postgres_pullPolicy }} \
    --set images.elasticsearch.pullPolicy={{ mep_images_elasticsearch_pullPolicy }} \
    --set images.ntp.pullPolicy={{ mep_images_ntp_pullPolicy }} \
    --set ssl.secretName={{ mep_ssl_secretName }} \
    --set global.persistence.enabled={{ ENABLE_PERSISTENCE }} \
    --set postgres.kongPass={{ postgresPassword }} \
    --set mepauthProperties.jwtPrivateKey={{ certPassword }}
  no_log: true
  ignore_errors: yes
  register: mep_outp

- name: Output of "Deploy MEP" task
  debug:
    msg: "rc: {{mep_outp.rc}}, stderr: {{mep_outp.stderr}}, stderr_lines: {{mep_outp.stderr_lines}}, stdout: {{mep_outp.stdout}}, stdout_lines: {{mep_outp.stdout_lines}}"
  when: mep_outp is failed

- name: Failing as task "Deploy MEP" failed
  fail:
    msg: The task Deploy MEP has failed
  when: mep_outp is failed

- name: Check MEP Status
  include: "check_pod_status.yml"
