---

- name: Set ARCH Value to be amd64
  set_fact:
    ARCH: amd64
  when: ansible_architecture == "x86_64"

- name: Set ARCH Value to be arm64
  set_fact:
    ARCH: arm64
  when: ansible_architecture == "aarch64"

- name: Set Registry URL for Multi Node
  set_fact:
    REGISTRY_URL: "{{ groups.master[0] }}:5000/"
  when: NODE_MODE == "muno"

- name: Set Registry URL for AIO
  set_fact:
    REGISTRY_URL: ""
  when: NODE_MODE == "aio"

- name: Check EG_MODE for MEP
  fail:
    msg: "Could not {{ OPERATION }} MEP with EG_MODE: {{ EG_MODE }}"
  when: EG_MODE != "all" and EG_MODE != "edge"

- name: Check whether MEP is Deployed
  shell: helm list | grep mep-edgegallery
  register: mepDeployed
  ignore_errors: yes

- debug:
    msg: MEP is already deployed, no need to be deployed again
  when: mepDeployed is succeeded and OPERATION == "install"

- debug:
    msg: MEP is not deployed, will be deployed
  when: mepDeployed is failed and OPERATION == "install"

- debug:
    msg: MEP is already deployed, will be undeployed
  when: mepDeployed is succeeded and OPERATION == "uninstall"

- debug:
    msg: MEP is not deployed, no need to be undeployed anymore
  when: mepDeployed is failed and OPERATION == "uninstall"

- name: Deploy MEP Online
  include: "deploy_online.yml"
  when: mepDeployed is failed and OPERATION == "install" and NETWORK_MODE == "online"

- name: Deploy MEP Offline
  include: "deploy_offline.yml"
  when: mepDeployed is failed and OPERATION == "install" and NETWORK_MODE == "offline"

- name: Undeploy MEP
  include: "undeploy.yml"
  when: mepDeployed is succeeded and OPERATION == "uninstall"
