#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Create Namespace metallb-system
  shell: "kubectl apply -f {{ TARBALL_PATH }}/conf/edge/metallb/namespace.yaml"

- name: Create Secret Memberlist
  shell: kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"

- name: Set metallb speaker AMD64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/metallb/metallb.yaml"
    regexp: "image: metallb/speaker:v0.9.3$"
    replace: "image: {{mep_images_speaker_repository}}:{{mep_images_speaker_tag}}"
  when: ARCH == "amd64"

- name: Set metallb speaker ARM64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/metallb/metallb.yaml"
    regexp: "image: metallb/speaker:v0.9.3$"
    replace: "image: {{mep_images_speaker_repository}}:{{mep_images_speaker_arm64_tag}}"
  when: ARCH == "arm64"

- name: Set metallb controller AMD64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/metallb/metallb.yaml"
    regexp: "image: metallb/controller:v0.9.3$"
    replace: "image: {{mep_images_controller_repository}}:{{mep_images_controller_tag}}"
  when: ARCH == "amd64"

- name: Set metallb controller ARM64 Images
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/metallb/metallb.yaml"
    regexp: "image: metallb/controller:v0.9.3$"
    replace: "image: {{mep_images_controller_repository}}:{{mep_images_controller_arm64_tag}}"
  when: ARCH == "arm64"

- name: Create Metallb Resources
  shell: "kubectl apply -f {{ TARBALL_PATH }}/conf/edge/metallb/metallb.yaml"

- name: Change Default IP to be the eth0 IP
  replace:
    path: "{{ TARBALL_PATH }}/conf/edge/metallb/config-map.yaml"
    regexp: 192.168.100.120
    replace: "{{ MASTER_IP }}"

- name: Create ConfigMap
  shell: "kubectl apply -f {{ TARBALL_PATH }}/conf/edge/metallb/config-map.yaml"

- name: Wait for metallb-system controller Pod is Ready
  shell: kubectl get pods -A | grep "metallb-system" | grep "controller-" | grep "Running" | wc -l
  register: controllerPodNum
  until: controllerPodNum.stdout == "1"
  retries: 30
  delay: 5

- name: Wait for metallb-system speaker Pod is Ready
  shell: |
    nodes_num=`kubectl get nodes | wc -l`
    ((nodes_num=nodes_num-1))
    speaker_num=`kubectl get pods -A | grep "metallb-system" | grep "speaker-" | grep "Running" | wc -l`
    if [ $nodes_num == $speaker_num ]; then echo "true"; else echo "false"; fi
  register: speakerPodNum
  until: speakerPodNum.stdout == "true"
  retries: 30
  delay: 5
