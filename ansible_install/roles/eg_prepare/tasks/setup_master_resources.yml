#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Create SSL Certs
  shell: "docker run --rm -e CERT_VALIDITY_IN_DAYS={{ CERT_VALIDITY_IN_DAYS }} -e CERT_PASSWORD={{ certPassword }} -v {{ TARBALL_PATH }}/conf/keys/:/certs edgegallery/deploy-tool:{{ EG_IMAGE_TAG }}"

- name: Create Secret edgegallery-ssl-secret
  shell: |
    kubectl create secret generic edgegallery-ssl-secret \
      --from-file=keystore.p12={{ TARBALL_PATH }}/conf/keys/keystore.p12 \
      --from-file=keystore.jks={{ TARBALL_PATH }}/conf/keys/keystore.jks \
      --from-literal=keystorePassword={{ certPassword }} \
      --from-literal=keystoreType={{ keystoreType }} \
      --from-literal=keyAlias={{ keyAlias }} \
      --from-literal=truststorePassword={{ certPassword }} \
      --from-file=trust.cer={{ TARBALL_PATH }}/conf/keys/ca.crt \
      --from-file=server.cer={{ TARBALL_PATH }}/conf/keys/tls.crt \
      --from-file=server_key.pem={{ TARBALL_PATH }}/conf/keys/encryptedtls.key \
      --from-literal=cert_pwd={{ certPassword }}
  when: EG_MODE == "all" or EG_MODE == "controller"
  no_log: true
  ignore_errors: yes
  register: secret_sslout

- name: Output of "Create Secret edgegallery-ssl-secret" task
  debug:
    msg: "rc: {{secret_sslout.rc}}, stderr: {{secret_sslout.stderr}}, stderr_lines: {{secret_sslout.stderr_lines}}, stdout: {{secret_sslout.stdout}}, stdout_lines: {{secret_sslout.stdout_lines}}"
  when: secret_sslout is failed

- name: Failing as task "Create Secret edgegallery-ssl-secret" failed
  fail:
    msg: The task Create Secret edgegallery-ssl-secret has failed
  when: secret_sslout is failed

- name: Install Service Center
  shell: |
    helm install --wait service-center-edgegallery {{ HELM_CHARTS_PATH }}/edgegallery/servicecenter-{{ HELM_TAG }}.tgz \
    --set images.repository={{ servicecenter_images_repository }} \
    --set images.pullPolicy={{ servicecenter_images_pullPolicy }} \
    --set global.ssl.enabled={{ servicecenter_global_ssl_enabled }} \
    --set global.ssl.secretName={{ servicecenter_global_ssl_secretName }}
  when: EG_MODE == "all" or EG_MODE == "controller"

- name: Create Signature Secret
  include: "create_signature_secret.yml"
