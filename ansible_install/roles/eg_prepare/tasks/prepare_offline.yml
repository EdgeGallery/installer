---

- name: Load All EdgeGallery Docker Images
  shell: for f in "{{ TARBALL_PATH }}"/eg_swr_images/*.tar.gz; do docker load -i $f; done
  when: K8S_NODE_TYPE == "master"

- name: Push All EG Images to Registry
  import_tasks: push_images_to_registry.yml
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "master"

- name: Try to Get Helm Version
  shell: helm version | cut -d \" -f2
  register: helmVersion
  ignore_errors: yes

- name: Helm is Installed
  debug:
    msg: "helm {{ HELM_VERSION }} is already installed"
  when: helmVersion.stdout == (HELM_VERSION)

- name: Helm doesn't be Installed
  debug:
    msg: "helm {{ HELM_VERSION }} is not installed yet"
  when: helmVersion.stdout != (HELM_VERSION)

- name: Unarchive Helm Offline Tarball File
  unarchive:
    src: "{{ HELM_TARBALL_FILE }}"
    dest: "{{ HELM_OFFLINE_DIR }}"
    copy: no
  register: unarchiveHelm
  when: helmVersion.stdout != (HELM_VERSION)

- name : Move Helm Exec File to /usr/local/bin/
  copy:
    src: "{{ HELM_OFFLINE_DIR }}/linux-{{ ARCH }}/helm"
    dest: /usr/local/bin/
    mode: '0755'
    remote_src: yes
  when: helmVersion.stdout != (HELM_VERSION) and unarchiveHelm is succeeded

- name: Check Helm Installed
  shell: helm version
  when: helmVersion.stdout != (HELM_VERSION) and unarchiveHelm is succeeded

- name: Setup Helm Repo
  import_tasks: setup_helm_repo.yml
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "master"

- name: Master Node Setup EG Resources
  import_tasks: setup_master_resources.yml
  when: K8S_NODE_TYPE == "master"

- name: Get EG_NODE_EDGE_MP1
  shell: ip a | grep -B2 {{ ansible_default_ipv4['address'] }} | head -n1 | cut -d ":" -f2 |cut -d " " -f2
  register: mp1

- name: Get EG_NODE_EDGE_MM5
  shell: ip a | grep -B2 {{ ansible_default_ipv4['address'] }} | head -n1 | cut -d ":" -f2 |cut -d " " -f2
  register: mm5

- name: Set EG_NODE_EDGE_MP1
  set_fact:
    EG_NODE_EDGE_MP1: "{{ mp1.stdout }}"
  when: EG_NODE_EDGE_MP1 is undefined

- name: Set EG_NODE_EDGE_MM5
  set_fact:
    EG_NODE_EDGE_MM5: "{{ mm5.stdout }}"
  when: EG_NODE_EDGE_MM5 is undefined

- name: Setup Master Node Network Interface
  import_tasks: master_network_interface_setting.yml
  when: K8S_NODE_TYPE == "master"

- name: Setup Worker Node Network Interface
  import_tasks: worker_network_interface_setting.yml
  when: K8S_NODE_TYPE == "worker"

- name: Setup Harbor on Master Node
  import_tasks: master_harbor.yml
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge" and ARCH == "amd64"

- name: Login Harbor on Worker Node
  shell: docker login -u admin -p {{ HARBOR_ADMIN_PASSWORD }} {{ groups.master[0] }}
  when: K8S_NODE_TYPE == "worker" and EG_MODE != "edge" and ARCH == "amd64"
