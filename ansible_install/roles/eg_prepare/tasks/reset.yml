#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---

- name: Delete Signature Secret
  shell: "kubectl delete secret {{ SIGNATURE_SECRET_NAME }}"
  when: K8S_NODE_TYPE == "master"
  ignore_errors: yes

- name: Delete Signature Cert Files
  file:
    path: "{{ SIGNATURE_CERTS_GENERATE_PATH }}"
    state: absent
  when: K8S_NODE_TYPE == "master"
  ignore_errors: yes

- name: Delete Harbor Secret
  shell: kubectl delete secret harbor
  ignore_errors: yes

- name: Remove Harbor Certs
  file:
    path: /etc/docker/certs.d
    state: absent
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge" and ARCH == "amd64"
  ignore_errors: yes

- name: Down All Harbor Containers
  shell: docker-compose down
  args:
    chdir: "{{ HARBOR_DIR }}/harbor"
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge" and ARCH == "amd64"
  ignore_errors: yes

- name: Remove Harbor Data Volume When ENABLE_PERSISTENCE is false
  file:
    path: "{{ HARBOR_ROOT }}"
    state: absent
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge" and ARCH == "amd64" and ENABLE_PERSISTENCE == false
  ignore_errors: yes

- name: Uninstalled Docker Compose
  file:
    path: /usr/local/bin/docker-compose
    state: absent
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge" and ARCH == "amd64"
  ignore_errors: yes

- name: Deleting rc.local file
  file:
    path: /etc/rc.local   
    state: absent
  ignore_errors: yes
 
- name: remove  rc.local.service confuigure
  copy:
    src: /lib/systemd/system/rc-local.service
    dest: /lib/systemd/system/rc.local.service
    force: yes
  ignore_errors: yes


- name: Cleanup Network Setting
  shell: |
    ip link set dev eg-mp1 down
    ip link delete eg-mp1
    ip link set dev eg-mm5 down
    ip link delete eg-mm5
  ignore_errors: yes

- name: Deleting interface config file
  file:
    path: /etc/network/interfaces.d/eg-if.cfg
    state: absent
  ignore_errors: yes

- name: Cleanup Other Network Settings for Multi Node Mode
  shell: |
    ip link delete vxlan-mp1
    ip link delete vxlan-mm5
  when: NODE_MODE == "muno"
  ignore_errors: yes

- name: Uninstall Service Center
  shell: helm uninstall service-center-edgegallery
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge"
  ignore_errors: yes

- name: Wait For Cleanup All Service Center K8S Resources
  shell: |
    kubectl get all -A | grep "service-center"
    rc=$?
    echo $rc
  register: atpResourceRC
  until: atpResourceRC.stdout == "1"
  retries: 60
  delay: 5
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge"
  ignore_errors: yes

- name: Delete Secret edgegallery-ssl-secret
  shell: kubectl delete secret edgegallery-ssl-secret
  when: K8S_NODE_TYPE == "master" and EG_MODE != "edge"
  ignore_errors: yes

- name: Remove edgagallery and stable Helm Repos
  shell: "helm repo remove {{ item }}"
  loop:
    - edgegallery
    - stable
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "master"
  ignore_errors: yes

- name: Remove Helm Repo Container
  shell: "docker rm -f {{ HELM_REPO_CONTAINER_NAME }}"
  when: NODE_MODE == "muno" and K8S_NODE_TYPE == "master"
  ignore_errors: yes
